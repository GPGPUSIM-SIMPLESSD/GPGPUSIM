
Fatbin elf code:
================
arch = sm_10
code version = [1,2]
producer = cuda
host = linux
compile_size = 64bit
identifier = inlinePTX.cu

.section .strtab	STRTAB

.section .shstrtab	STRTAB

.section .symtab	SYMTAB
 index           value           size      info    other  shndx    name  
   0               0               0        0        0      0     (null)
   1               0               0        3        0      1     .shstrtab
   2               0               0        3        0      2     .strtab
   3               0               0        3        0      3     .symtab
   4               0               0        3        0      0     
   5               0               0        3        0      0     
   6               0              80        3        0      4     .text._Z12sequence_gpuPii
   7               0               0        3        0      6     .nv.info._Z12sequence_gpuPii
   8               0               0        3        0      7     .nv.shared._Z12sequence_gpuPii
   9               0               0        3        0      5     .nv.constant1._Z12sequence_gpuPii
  10               0               0       12       10      4     _Z12sequence_gpuPii


.nv.constant1._Z12sequence_gpuPii	PROGBITS
0x0000001f  


.nv.shared._Z12sequence_gpuPii	NOBITS
   No data to be dumped. 


.text._Z12sequence_gpuPii	PROGBITS
bar = 0	reg = 2	lmem=0	smem=28
0x10004205  0x0023c780  0xa0000005  0x04000780  
0x60014c01  0x00204780  0x3000cdfd  0x6c20c7c8  
0x30000003  0x00000280  0x30020001  0xc4100780  
0x00000005  0x60000780  0x2000c801  0x04200780  
0xd0800205  0x04400780  0xd00e0005  0xa0c00781  



.nv.info._Z12sequence_gpuPii	PROGBITS
	<0x1>
	Attribute:	EIATTR_SMEM_PARAM_SIZE
	Format:	EIFMT_HVAL
	Value:	0xc
	<0x2>
	Attribute:	EIATTR_KPARAM_INFO
	Format:	EIFMT_SVAL
	Value:	Index : 0x0	Ordinal : 0x1	Offset  : 0x8	Size    : 0x4
		Pointee's logAlignment : 0x0	Space : 0x0	cbank : 0x1f	Parameter Space : SMEM	
	<0x3>
	Attribute:	EIATTR_KPARAM_INFO
	Format:	EIFMT_SVAL
	Value:	Index : 0x0	Ordinal : 0x0	Offset  : 0x0	Size    : 0x8
		Pointee's logAlignment : 0x0	Space : 0x0	cbank : 0x1f	Parameter Space : SMEM	
	<0x4>
	Attribute:	EIATTR_SYNC_STACK
	Format:	EIFMT_SVAL
	Value:	0x10008 0x1 

	code for sm_10
		Function : _Z12sequence_gpuPii
	/*0000*/     /*0x100042050023c780*/ 	MOV.U16 R0H, g [0x1].U16;
	/*0008*/     /*0xa000000504000780*/ 	I2I.U32.U16 R1, R0L;
	/*0010*/     /*0x60014c0100204780*/ 	IMAD.U16 R0, g [0x6].U16, R0H, R1;
	/*0018*/     /*0x3000cdfd6c20c7c8*/ 	ISET.S32.C0 o [0x7f], g [0x6], R0, LE;
	/*0020*/     /*0x3000000300000280*/ 	RET C0.NE;
	/*0028*/     /*0x30020001c4100780*/ 	SHL R0, R0, 0x2;
	/*0030*/     /*0x0000000560000780*/ 	S2R R1, SR0;
	/*0038*/     /*0x2000c80104200780*/ 	IADD R0, g [0x4], R0;
	/*0040*/     /*0xd080020504400780*/ 	LOP.AND R1, R1, c [0x1] [0x0];
	/*0048*/     /*0xd00e0005a0c00781*/ 	GST.U32 global14 [R0], R1;
		....................................



Fatbin ptx code:
================
arch = sm_10
code version = [1,4]
producer = cuda
host = linux
compile_size = 64bit
identifier = inlinePTX.cu
	.version 1.4
.target sm_10, map_f64_to_f32

	


	
	


	
	
	
	
	
	
	

.file	1	"<command-line>"
.file	2	"/tmp/tmpxft_00010b1b_00000000-10_inlinePTX.compute_10.cudafe2.gpu"
.file	3	"/usr/lib/gcc/x86_64-linux-gnu/4.4.7/include/stddef.h"
.file	4	"/usr/local/cuda/include/crt/device_runtime.h"
.file	5	"/usr/local/cuda/include/host_defines.h"
.file	6	"/usr/local/cuda/include/builtin_types.h"
.file	7	"/usr/local/cuda/include/device_types.h"
.file	8	"/usr/local/cuda/include/driver_types.h"
.file	9	"/usr/local/cuda/include/surface_types.h"
.file	10	"/usr/local/cuda/include/texture_types.h"
.file	11	"/usr/local/cuda/include/vector_types.h"
.file	12	"/usr/local/cuda/include/device_launch_parameters.h"
.file	13	"/usr/local/cuda/include/crt/storage_class.h"
.file	14	"inlinePTX.cu"
.file	15	"/usr/local/cuda/include/common_functions.h"
.file	16	"/usr/local/cuda/include/math_functions.h"
.file	17	"/usr/local/cuda/include/math_constants.h"
.file	18	"/usr/local/cuda/include/device_functions.h"
.file	19	"/usr/local/cuda/include/sm_11_atomic_functions.h"
.file	20	"/usr/local/cuda/include/sm_12_atomic_functions.h"
.file	21	"/usr/local/cuda/include/sm_13_double_functions.h"
.file	22	"/usr/local/cuda/include/sm_20_atomic_functions.h"
.file	23	"/usr/local/cuda/include/sm_20_intrinsics.h"
.file	24	"/usr/local/cuda/include/sm_30_intrinsics.h"
.file	25	"/usr/local/cuda/include/surface_functions.h"
.file	26	"/usr/local/cuda/include/texture_fetch_functions.h"
.file	27	"/usr/local/cuda/include/math_functions_dbl_ptx1.h"


.entry _Z12sequence_gpuPii (
.param .u64 __cudaparm__Z12sequence_gpuPii_d_ptr,
.param .s32 __cudaparm__Z12sequence_gpuPii_length)
{
.reg .u16 %rh<4>;
.reg .u32 %r<8>;
.reg .u64 %rd<6>;
.reg .pred %p<3>;
.loc	14	53	0
$LDWbegin__Z12sequence_gpuPii:
mov.u16 %rh1, %ctaid.x;
mov.u16 %rh2, %ntid.x;
mul.wide.u16 %r1, %rh1, %rh2;
cvt.u32.u16 %r2, %tid.x;
add.u32 %r3, %r2, %r1;
ld.param.s32 %r4, [__cudaparm__Z12sequence_gpuPii_length];
setp.le.s32 %p1, %r4, %r3;
@%p1 bra $Lt_0_1026;
.loc	14	60	0
mov.u32 %r5, %laneid;
mov.s32 %r6, %r5;
.loc	14	61	0
ld.param.u64 %rd1, [__cudaparm__Z12sequence_gpuPii_d_ptr];
cvt.s64.s32 %rd2, %r3;
mul.wide.s32 %rd3, %r3, 4;
add.u64 %rd4, %rd1, %rd3;
st.global.s32 [%rd4+0], %r6;
$Lt_0_1026:
.loc	14	63	0
exit;
$LDWend__Z12sequence_gpuPii:
} 


Fatbin ptx code:
================
arch = sm_30
code version = [3,0]
producer = cuda
host = linux
compile_size = 64bit
identifier = inlinePTX.cu






.version 3.0
.target sm_30
.address_size 64

.file	1 "/tmp/tmpxft_00010b1b_00000000-15_inlinePTX.compute_30.cpp3.i"
.file	2 "inlinePTX.cu"

.entry _Z12sequence_gpuPii(
.param .u64 _Z12sequence_gpuPii_param_0,
.param .u32 _Z12sequence_gpuPii_param_1
)
{
.reg .pred %p<2>;
.reg .s32 %r<8>;
.reg .s64 %rl<5>;


ld.param.u64 %rl2, [_Z12sequence_gpuPii_param_0];
ld.param.u32 %r2, [_Z12sequence_gpuPii_param_1];
cvta.to.global.u64 %rl1, %rl2;
.loc 2 55 1
mov.u32 %r3, %ntid.x;
mov.u32 %r4, %ctaid.x;
mov.u32 %r5, %tid.x;
mad.lo.s32 %r1, %r3, %r4, %r5;
.loc 2 56 1
setp.lt.s32 %p1, %r1, %r2;
@%p1 bra BB0_2;

.loc 2 63 2
ret;

BB0_2:

	mov.u32 %r6, %laneid;

	.loc 2 61 1
mul.wide.s32 %rl3, %r1, 4;
add.s64 %rl4, %rl1, %rl3;
st.global.u32 [%rl4], %r6;
.loc 2 63 2
ret;
}



Fatbin elf code:
================
arch = sm_30
code version = [1,4]
producer = cuda
host = linux
compile_size = 64bit
identifier = inlinePTX.cu

.section .strtab	STRTAB

.section .shstrtab	STRTAB

.section .symtab	SYMTAB
 index           value           size      info    other  shndx    name  
   0               0               0        0        0      0     (null)
   1               0               0        3        0      1     .shstrtab
   2               0               0        3        0      2     .strtab
   3               0               0        3        0      3     .symtab
   4               0               0        3        0      0     
   5               0               0        3        0      0     
   6               0             128        3        0      4     .text._Z12sequence_gpuPii
   7               0               0        3        0      6     .nv.info._Z12sequence_gpuPii
   8               0               0        3        0      7     .nv.info
   9               0               0        3        0      5     .nv.constant0._Z12sequence_gpuPii
  10               0             128       12       10      4     _Z12sequence_gpuPii


.nv.constant0._Z12sequence_gpuPii	PROGBITS
0x00000000  0x00000000  0x00000000  0x00000000  0x00000000  
0x00000000  0x00000000  0x00000000  0x00000000  
0x00000000  0x00000000  0x00000000  0x00000000  
0x00000000  0x00000000  0x00000000  0x00000000  
0x00000000  0x00000000  0x00000000  0x00000000  
0x00000000  0x00000000  0x00000000  0x00000000  
0x00000000  0x00000000  0x00000000  0x00000000  
0x00000000  0x00000000  0x00000000  0x00000000  
0x00000000  0x00000000  0x00000000  0x00000000  
0x00000000  0x00000000  0x00000000  0x00000000  
0x00000000  0x00000000  0x00000000  0x00000000  
0x00000000  0x00000000  0x00000000  0x00000000  
0x00000000  0x00000000  0x00000000  0x00000000  
0x00000000  0x00000000  0x00000000  0x00000000  
0x00000000  0x00000000  0x00000000  0x00000000  
0x00000000  0x00000000  0x00000000  0x00000000  
0x00000000  0x00000000  0x00000000  0x00000000  
0x00000000  0x00000000  0x00000000  0x00000000  
0x00000000  0x00000000  0x00000000  0x00000000  
0x00000000  0x00000000  0x00000000  0x00000000  
0x00000000  0x00000000  


.text._Z12sequence_gpuPii	PROGBITS
bar = 0	reg = 6	lmem=0	smem=0
0x82823007  0x220002c2  0x10005de4  0x28004001  
0x94001c04  0x2c000000  0x8400dc04  0x2c000000  
0xa0001ca3  0x20064000  0x2001dc23  0x188e4005  
0xe000a1e7  0x40000000  0x000101e4  0x28004005  
0x82b20277  0x2002e002  0x100080e3  0x5000c000  
0x100100a3  0x2009c000  0x00000004  0x2c000000  
0x10214043  0x48004005  0x00400085  0x94000000  
0x00001de7  0x80000000  0xe0001de7  0x4003ffff  



.nv.info._Z12sequence_gpuPii	PROGBITS
	<0x1>
	Attribute:	EIATTR_PARAM_CBANK
	Format:	EIFMT_SVAL
	Value:	0x9 0xc0140 
	<0x2>
	Attribute:	EIATTR_CBANK_PARAM_SIZE
	Format:	EIFMT_HVAL
	Value:	0xc
	<0x3>
	Attribute:	EIATTR_KPARAM_INFO
	Format:	EIFMT_SVAL
	Value:	Index : 0x0	Ordinal : 0x1	Offset  : 0x8	Size    : 0x4
		Pointee's logAlignment : 0x0	Space : 0x0	cbank : 0x1f	Parameter Space : CBANK	
	<0x4>
	Attribute:	EIATTR_KPARAM_INFO
	Format:	EIFMT_SVAL
	Value:	Index : 0x0	Ordinal : 0x0	Offset  : 0x0	Size    : 0x8
		Pointee's logAlignment : 0x0	Space : 0x0	cbank : 0x1f	Parameter Space : CBANK	
	<0x5>
	Attribute:	EIATTR_SYNC_STACK
	Format:	EIFMT_SVAL
	Value:	0x10010 0x1 


.nv.info	PROGBITS
	<0x1>
	Attribute:	EIATTR_MIN_STACK_SIZE
	Format:	EIFMT_SVAL
	Value:	function: _Z12sequence_gpuPii(0xa)	min stack size: 0x0
	<0x2>
	Attribute:	EIATTR_FRAME_SIZE
	Format:	EIFMT_SVAL
	Value:	function: _Z12sequence_gpuPii(0xa)	frame size: 0x0

	code for sm_30
		Function : _Z12sequence_gpuPii
	/*0008*/     /*0x10005de428004001*/ 	MOV R1, c [0x0] [0x44];
	/*0010*/     /*0x94001c042c000000*/ 	S2R R0, SR_CTAid_X;
	/*0018*/     /*0x8400dc042c000000*/ 	S2R R3, SR_Tid_X;
	/*0020*/     /*0xa0001ca320064000*/ 	IMAD R0, R0, c [0x0] [0x28], R3;
	/*0028*/     /*0x2001dc23188e4005*/ 	ISETP.LT.AND P0, pt, R0, c [0x0] [0x148], pt;
	/*0030*/     /*0xe000a1e740000000*/ 	@!P0 BRA.U 0x70;
	/*0038*/     /*0x000101e428004005*/ 	@P0 MOV R4, c [0x0] [0x140];
	/*0048*/     /*0x100080e35000c000*/ 	@P0 IMUL.HI R2, R0, 0x4;
	/*0050*/     /*0x100100a32009c000*/ 	@P0 IMAD R4.CC, R0, 0x4, R4;
	/*0058*/     /*0x000000042c000000*/ 	@P0 S2R R0, SR_LaneId;
	/*0060*/     /*0x1021404348004005*/ 	@P0 IADD.X R5, R2, c [0x0] [0x144];
	/*0068*/     /*0x0040008594000000*/ 	@P0 ST.E [R4], R0;
	/*0070*/     /*0x00001de780000000*/ 	EXIT;
	/*0078*/     /*0xe0001de74003ffff*/ 	BRA 0x78;
		....................................



Fatbin ptx code:
================
arch = sm_20
code version = [3,0]
producer = cuda
host = linux
compile_size = 64bit
identifier = inlinePTX.cu






.version 3.0
.target sm_20
.address_size 64

.file	1 "/tmp/tmpxft_00010b1b_00000000-19_inlinePTX.compute_20.cpp3.i"
.file	2 "inlinePTX.cu"

.entry _Z12sequence_gpuPii(
.param .u64 _Z12sequence_gpuPii_param_0,
.param .u32 _Z12sequence_gpuPii_param_1
)
{
.reg .pred %p<2>;
.reg .s32 %r<8>;
.reg .s64 %rl<5>;


ld.param.u64 %rl2, [_Z12sequence_gpuPii_param_0];
ld.param.u32 %r2, [_Z12sequence_gpuPii_param_1];
cvta.to.global.u64 %rl1, %rl2;
.loc 2 55 1
mov.u32 %r3, %ntid.x;
mov.u32 %r4, %ctaid.x;
mov.u32 %r5, %tid.x;
mad.lo.s32 %r1, %r3, %r4, %r5;
.loc 2 56 1
setp.lt.s32 %p1, %r1, %r2;
@%p1 bra BB0_2;

.loc 2 63 2
ret;

BB0_2:

	mov.u32 %r6, %laneid;

	.loc 2 61 1
mul.wide.s32 %rl3, %r1, 4;
add.s64 %rl4, %rl1, %rl3;
st.global.u32 [%rl4], %r6;
.loc 2 63 2
ret;
}



Fatbin elf code:
================
arch = sm_20
code version = [1,4]
producer = cuda
host = linux
compile_size = 64bit
identifier = inlinePTX.cu

.section .strtab	STRTAB

.section .shstrtab	STRTAB

.section .symtab	SYMTAB
 index           value           size      info    other  shndx    name  
   0               0               0        0        0      0     (null)
   1               0               0        3        0      1     .shstrtab
   2               0               0        3        0      2     .strtab
   3               0               0        3        0      3     .symtab
   4               0               0        3        0      0     
   5               0               0        3        0      0     
   6               0             104        3        0      4     .text._Z12sequence_gpuPii
   7               0               0        3        0      6     .nv.info._Z12sequence_gpuPii
   8               0               0        3        0      7     .nv.info
   9               0               0        3        0      5     .nv.constant0._Z12sequence_gpuPii
  10               0             104       12       10      4     _Z12sequence_gpuPii


.nv.constant0._Z12sequence_gpuPii	PROGBITS
0x00000000  0x00000000  0x00000000  0x00000000  0x00000000  
0x00000000  0x00000000  0x00000000  0x00000000  
0x00000000  0x00000000  


.text._Z12sequence_gpuPii	PROGBITS
bar = 0	reg = 6	lmem=0	smem=0
0x00005de4  0x28004404  0x94001c04  0x2c000000  
0x84009c04  0x2c000000  0x20001ca3  0x20044000  
0xa001dc23  0x188e4000  0xc000a1e7  0x40000000  
0x800101e4  0x28004000  0x100080e3  0x5000c000  
0x100100a3  0x2009c000  0x00000004  0x2c000000  
0x90214043  0x48004000  0x00400085  0x94000000  
0x00001de7  0x80000000  


.nv.info._Z12sequence_gpuPii	PROGBITS
	<0x1>
	Attribute:	EIATTR_PARAM_CBANK
	Format:	EIFMT_SVAL
	Value:	0x9 0xc0020 
	<0x2>
	Attribute:	EIATTR_CBANK_PARAM_SIZE
	Format:	EIFMT_HVAL
	Value:	0xc
	<0x3>
	Attribute:	EIATTR_KPARAM_INFO
	Format:	EIFMT_SVAL
	Value:	Index : 0x0	Ordinal : 0x1	Offset  : 0x8	Size    : 0x4
		Pointee's logAlignment : 0x0	Space : 0x0	cbank : 0x1f	Parameter Space : CBANK	
	<0x4>
	Attribute:	EIATTR_KPARAM_INFO
	Format:	EIFMT_SVAL
	Value:	Index : 0x0	Ordinal : 0x0	Offset  : 0x0	Size    : 0x8
		Pointee's logAlignment : 0x0	Space : 0x0	cbank : 0x1f	Parameter Space : CBANK	
	<0x5>
	Attribute:	EIATTR_SYNC_STACK
	Format:	EIFMT_SVAL
	Value:	0x1000c 0x1 


.nv.info	PROGBITS
	<0x1>
	Attribute:	EIATTR_MIN_STACK_SIZE
	Format:	EIFMT_SVAL
	Value:	function: _Z12sequence_gpuPii(0xa)	min stack size: 0x0
	<0x2>
	Attribute:	EIATTR_FRAME_SIZE
	Format:	EIFMT_SVAL
	Value:	function: _Z12sequence_gpuPii(0xa)	frame size: 0x0

	code for sm_20
		Function : _Z12sequence_gpuPii
	/*0000*/     /*0x00005de428004404*/ 	MOV R1, c [0x1] [0x100];
	/*0008*/     /*0x94001c042c000000*/ 	S2R R0, SR_CTAid_X;
	/*0010*/     /*0x84009c042c000000*/ 	S2R R2, SR_Tid_X;
	/*0018*/     /*0x20001ca320044000*/ 	IMAD R0, R0, c [0x0] [0x8], R2;
	/*0020*/     /*0xa001dc23188e4000*/ 	ISETP.LT.AND P0, pt, R0, c [0x0] [0x28], pt;
	/*0028*/     /*0xc000a1e740000000*/ 	@!P0 BRA.U 0x60;
	/*0030*/     /*0x800101e428004000*/ 	@P0 MOV R4, c [0x0] [0x20];
	/*0038*/     /*0x100080e35000c000*/ 	@P0 IMUL.HI R2, R0, 0x4;
	/*0040*/     /*0x100100a32009c000*/ 	@P0 IMAD R4.CC, R0, 0x4, R4;
	/*0048*/     /*0x000000042c000000*/ 	@P0 S2R R0, SR_LaneId;
	/*0050*/     /*0x9021404348004000*/ 	@P0 IADD.X R5, R2, c [0x0] [0x24];
	/*0058*/     /*0x0040008594000000*/ 	@P0 ST.E [R4], R0;
	/*0060*/     /*0x00001de780000000*/ 	EXIT;
		....................................


